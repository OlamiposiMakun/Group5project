import random
# H = happiness values
H = [7, 4, 10, 5]
# D = deviation value
D = [3, 10, 6, 2]




# eGreedy task
def eGreedy(e=10) -> float:
    # Store and update happiness values and time of visits for each cafeteria
    happiness_values = [0, 0, 0, 0]
    visit_count = [1, 1, 1, 1]

    # Day 1-4 simulate the values
    # set the simulated value to the happiness values
    happiness_values[0] = random.normalvariate(H[0], D[0])
    happiness_values[1] = random.normalvariate(H[1], D[1])
    happiness_values[2] = random.normalvariate(H[2], D[2])
    happiness_values[3] = random.normalvariate(H[3], D[3])

    # create a list storing the averages
    averages = [happiness_values[0]/visit_count[0],
                happiness_values[1]/visit_count[1],
                happiness_values[2]/visit_count[2],
                happiness_values[3]/visit_count[3]]

    # Find the best cafe
    # Best cafe will not always be the same
    best_cafe = averages.index(max(averages))


    # Then create a loop determine for the next 196 days
    # determine if we're going to the random or the best
    for i in range(196):
        visit_random_cafe = random.random()

        # I will visit a random cafe
        if visit_random_cafe < (e/100):
            # Choose a random cafeteria
            random_cafe = random.randint(0, 3)
            visit_count[random_cafe] += 1
            # generate a random value for happiness based on its normal distribution
            happiness = random.normalvariate(H[random_cafe], D[random_cafe])
            # update the values
            happiness_values[random_cafe] += happiness

        else:
            # I will visit the cafeteria with the highest average happiness value
            happiness = random.normalvariate(H[best_cafe], D[best_cafe])
            # update the values
            visit_count[best_cafe] += 1
            happiness_values[best_cafe] += happiness
        total_happiness_value = sum(happiness_values)
    return total_happiness_value

# print out simulated result
total_happiness_value = eGreedy()
print("Total happiness value: " + str(total_happiness_value))




# Exploit code
def generate_happiness(h, d):
    return random.normalvariate(h, d)


def exploitonly() -> float:
    c1 = (7, 3)
    c2 = (4, 10)
    c3 = (10, 6)
    c4 = (5, 2)
    # make list to store the happiness values for each cafeteria
    h_v = []
    # Visit each cafeteria once and generate happiness values
    h_v.append(generate_happiness(*c1))
    h_v.append(generate_happiness(*c2))
    h_v.append(generate_happiness(*c3))
    h_v.append(generate_happiness(*c4))
    # Find the index of the best cafeteria
    best_cafeteria = h_v.index(max(h_v))
    # Visit the best cafeteria for the next 196 days and generate happiness values
    for i in range(196):
        h_v.append(generate_happiness([c1, c2, c3, c4][best_cafeteria]))
    # Return the sum of all the happiness values
    return sum(h_v)
